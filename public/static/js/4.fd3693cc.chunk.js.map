{"version":3,"sources":["components/Input/index.module.sass","components/Input/index.tsx","views/PageLogin/displays/LoginBox/index.tsx","api/axios.ts","api/index.ts","views/PageLogin/displays/RegBox/index.tsx","views/PageLogin/index.tsx"],"names":["module","exports","Input","props","value","type","label","labelWidth","labelPosition","onChange","handleChange","e","target","className","style","width","textAlign","input","LoginBox","useState","username","usernameChange","password","passwordChange","onSubmit","onClick","axios","Axios","create","interceptors","response","use","data","console","log","success","Promise","reject","Error","msg","err","getExistName","params","get","RegBox","state","repassword","usernameValid","handleUsernameChange","v","setState","checkUsernameValid","handlePasswordChange","handleRepasswordChange","handleFormSubmit","debounce","then","catch","checkPasswordValid","length","this","passwordValid","color","disabled","Component","form","post","user"],"mappings":"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","file":"static/js/4.fd3693cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__2y04V\",\"input\":\"Input_input__OVELj\"};","import React from 'react';\r\nimport style from './index.module.sass';\r\n\r\ninterface inputProps {\r\n    value?: string,\r\n    type?: string,\r\n    label?: string,\r\n    labelWidth?: number,\r\n    labelPosition?: 'left'|'center'|'right'\r\n    onChange?: (this: any, value: string) => void\r\n}\r\n\r\nconst Input: React.FC<inputProps> = (props) => {\r\n    const {\r\n        value = '',\r\n        type = 'text',\r\n        label = '',\r\n        labelWidth = 80,\r\n        labelPosition = 'left',\r\n        onChange\r\n    } = props;\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        label \r\n        ?<div>\r\n            <span className={ style.label } style={{ width: labelWidth+'px', textAlign: labelPosition }}>{ label }</span>\r\n            <input className={ style.input } value={value} type={type} onChange={handleChange} />\r\n        </div>\r\n        : <input className={ style.input } value={value} type={type} onChange={handleChange} />\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport Input from '../../../../components/Input';\r\nimport { loginForm } from '../../../../api/types';\r\n\r\n\r\ninterface loginBoxProps {\r\n    onSubmit?: (form: loginForm) => void\r\n}\r\n\r\nconst LoginBox: React.FC<loginBoxProps> = (props) => {\r\n\r\n    const [username, usernameChange] = useState('');\r\n    const [password, passwordChange] = useState('');\r\n    const { onSubmit } = props;\r\n\r\n    const handleSubmit = () => {\r\n        onSubmit && onSubmit({\r\n            username, password\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Input\r\n                value={username}\r\n                label='用户名：'\r\n                labelWidth={100}\r\n                labelPosition='right'\r\n                onChange={usernameChange} />\r\n            <Input\r\n                value={password}\r\n                type='password'\r\n                labelWidth={100}\r\n                labelPosition='right'\r\n                label='密码：'\r\n                onChange={passwordChange} />\r\n            <button onClick={ handleSubmit }>登陆</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginBox;","import Axios, { AxiosInstance, AxiosResponse } from 'axios';\r\nimport { responseData } from './types';\r\n\r\nconst axios: AxiosInstance = Axios.create();\r\n\r\naxios.interceptors.response.use((response: AxiosResponse<responseData>) => {\r\n    const data: responseData = response.data;\r\n    console.log(data);\r\n    if (data.success && data.success === 1) {\r\n        return response;\r\n    }\r\n\r\n    return Promise.reject(new Error(data.msg))\r\n}, (err: any) => {\r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default axios;\r\n\r\n","import axios from './axios';\r\nimport { loginForm, responseData, User, existName } from './types';\r\nimport { AxiosPromise } from 'axios';\r\n\r\nconst server = ''\r\n\r\nexport const postLogin: (data: loginForm) => AxiosPromise<responseData<User>> = data => axios.post(server + '/api/login', data);\r\n\r\nexport const postReg: (data: loginForm) => AxiosPromise<responseData<User>> = data => axios.post(server + '/api/register', data);\r\n\r\nexport const getExistName: (params: existName) => AxiosPromise<responseData> = params => axios.get(server + '/api/userexist/' + params.username);","import React, { Component } from 'react';\r\nimport { loginForm } from '../../../../api/types';\r\nimport { getExistName } from '../../../../api';\r\nimport Input from '../../../../components/Input';\r\nimport { debounce } from 'lodash';\r\n\r\ninterface regBoxProps {\r\n    onSubmit?: (form: loginForm) => void\r\n}\r\n\r\ninterface stateType {\r\n    username: string\r\n    password: string\r\n    repassword: string\r\n    usernameValid: boolean\r\n}\r\n\r\nclass RegBox extends Component<regBoxProps, stateType> {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        repassword: '',\r\n        usernameValid: false\r\n    }\r\n\r\n    handleUsernameChange = (v: string) => {\r\n        this.setState({\r\n            username: v\r\n        });\r\n        this.checkUsernameValid(v);\r\n    }\r\n\r\n    handlePasswordChange = (v: string) => {\r\n        this.setState({\r\n            password: v\r\n        });\r\n    }\r\n\r\n    handleRepasswordChange = (v: string) => {\r\n        this.setState({\r\n            repassword: v\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = () => {\r\n        const { onSubmit } = this.props;\r\n        const { username, password } = this.state;\r\n\r\n        onSubmit && onSubmit({\r\n            username, password\r\n        });\r\n    }\r\n\r\n    checkUsernameValid = debounce<(v: string) => void>((username) => {\r\n        if (username) {\r\n            getExistName({username})\r\n                .then(() => {\r\n                    this.setState({\r\n                        usernameValid: true\r\n                    });\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            this.setState({\r\n                usernameValid: false\r\n            });\r\n        }\r\n    }, 500)\r\n\r\n    checkPasswordValid = () => {\r\n        const { password, repassword } = this.state;\r\n        return (password.length >= 6) && password === repassword;\r\n    }\r\n\r\n    render() {\r\n        const {username, password, repassword, usernameValid} = this.state;\r\n        const passwordValid = this.checkPasswordValid();\r\n        return (\r\n            <div>\r\n                <Input\r\n                    value={username}\r\n                    label='用户名：'\r\n                    labelWidth={100}\r\n                    labelPosition='right'\r\n                    onChange={this.handleUsernameChange} />\r\n                <span style={{ color: 'green' }}>{ usernameValid ? '可以使用': '' }</span>\r\n                <Input\r\n                    value={password}\r\n                    type='password'\r\n                    labelWidth={100}\r\n                    labelPosition='right'\r\n                    label='密码：'\r\n                    onChange={this.handlePasswordChange} />\r\n                <Input\r\n                    value={repassword}\r\n                    type='password'\r\n                    labelWidth={100}\r\n                    labelPosition='right'\r\n                    label='密码：'\r\n                    onChange={this.handleRepasswordChange} />\r\n                <button disabled={!(usernameValid && passwordValid)} onClick={ this.handleFormSubmit }>注册</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegBox;","import React from 'react';\r\nimport LoginBox from './displays/LoginBox';\r\nimport RegBox from './displays/RegBox';\r\nimport { postLogin, postReg } from '../../api';\r\nimport { loginForm, User } from '../../api/types';\r\n\r\nexport default () => {\r\n\r\n    const handleLoginSubmit = (form: loginForm) => {\r\n        postLogin(form)\r\n            .then(({data}) => {\r\n                const user:User = data.data;\r\n                console.log(user);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const handleRegSubmit = (form: loginForm) => {\r\n        postReg(form)\r\n            .then(({data}) => {\r\n                const user:User = data.data;\r\n                console.log(user);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginBox onSubmit={handleLoginSubmit} />\r\n            <RegBox onSubmit={handleRegSubmit} />\r\n        </div>\r\n    )\r\n};"],"sourceRoot":""}